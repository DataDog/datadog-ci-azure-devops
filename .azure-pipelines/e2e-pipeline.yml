trigger: none # Disable individual commit runs. https://learn.microsoft.com/en-us/azure/devops/pipelines/repos/github?view=azure-devops&tabs=yaml#opting-out-of-ci
pr: none # Disable PR runs. https://learn.microsoft.com/en-us/azure/devops/pipelines/repos/github?view=azure-devops&tabs=yaml#pr-triggers

# Automatically run this E2E pipeline when the dev pipeline succeeds.
# https://learn.microsoft.com/en-us/azure/devops/pipelines/process/resources?view=azure-devops&tabs=schema#define-a-pipelines-resource
resources:
  pipelines:
    - pipeline: e2e-tests-on-dev-extension
      source: Development # Name of `dev-pipeline.yml` as shown in the Azure DevOps UI.
      trigger: true

variables:
  - group: ci-variables

stages:
  - stage: Test
    displayName: E2E tests DEV Extension
    jobs:
      - job: E2E
        displayName: Cross-platform end-to-end testing
        strategy:
          matrix:
            Linux:
              imageName: 'ubuntu-latest'
            Windows:
              imageName: 'windows-latest'
        pool:
          vmImage: $(imageName)
        steps:
          - task: Datadog.datadog-ci-dev.synthetics-application-testing.SyntheticsRunTests@3
            displayName: Run DEV task - apiAppKeys
            name: runSyntheticsTests
            inputs:
              authenticationType: 'apiAppKeys'
              apiKey: '$(API_KEY)'
              appKey: '$(APP_KEY)'
              publicIds: '2r9-q7u-4nn,pwd-mwg-3p5'
              configPath: 'ci/e2e.config.json'

          # Example of using outputs
          - bash: |
              echo 'Batch URL: $(runSyntheticsTests.batchUrl)'
              echo 'Raw Results:'
              echo $RAW_RESULTS | jq '.'
            displayName: Example of using outputs (Linux)
            condition: eq(variables['Agent.OS'], 'Linux')
            env:
              RAW_RESULTS: $(runSyntheticsTests.rawResults)
          - powershell: |
              echo "Batch URL: $(runSyntheticsTests.batchUrl)"
              echo "Raw Results:"
              echo $Env:RAW_RESULTS | jq '.'
            displayName: Example of using outputs (Windows)
            condition: eq(variables['Agent.OS'], 'Windows_NT')
            env:
              RAW_RESULTS: $(runSyntheticsTests.rawResults)

          # Example of parsing and using raw results with JS
          - task: UseNode@1
            displayName: 'Install Node.js'
            inputs:
              version: '20.x'
          # Linux only
          - bash: |
              cat > parse-results.js << 'EOF'
                const rawResults = JSON.parse(process.env.RAW_RESULTS);
                console.log('Parsed Raw Results:', rawResults);
              EOF
            displayName: Prepare script (Linux)
            condition: eq(variables['Agent.OS'], 'Linux')
          # Windows only
          - powershell: |
              @'
                const rawResults = JSON.parse(process.env.RAW_RESULTS);
                console.log('Parsed Raw Results:', rawResults);
              '@ | Out-File -FilePath parse-results.js -Encoding utf8
            displayName: Prepare script (Windows)
            condition: eq(variables['Agent.OS'], 'Windows_NT')
          # Run the script
          - script: node parse-results.js
            displayName: Example of parsing and using raw results with JS
            env:
              RAW_RESULTS: $(runSyntheticsTests.rawResults)

          - task: Datadog.datadog-ci-dev.synthetics-application-testing.SyntheticsRunTests@3
            displayName: Run DEV task - connectedService
            inputs:
              authenticationType: 'connectedService'
              connectedService: 'synthetics-e2e-testing-org'
              publicIds: |
                2r9-q7u-4nn
                pwd-mwg-3p5
              configPath: 'ci/e2e.config.json'
