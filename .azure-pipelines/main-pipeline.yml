# Disable the pipeline for individual commits except on `main` merges, and on version tags.
trigger:
  branches:
    include:
      - main
      - refs/tags/v* # Only version tags
  tags:
    exclude:
      - '*' # Exclude all other tags

# The pipeline requires a PR to run on branches.
pr:
  branches:
    include:
      - '*'
    exclude:
      - refs/tags/* # Exclude all other tags

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: ci-variables
  - name: artifactPath
    value: vsix
  - name: packagedTask
    value: datadog-ci.vsix
  - name: publisherId
    value: Datadog
  - name: extensionName
    value: 'Datadog Continuous Testing'
  - name: extensionId
    value: datadog-ci
  - name: devExtensionTag
    value: -dev
  - name: contributionId
    value: synthetics-application-testing

stages:
  # Build and package .vsix extension file
  - stage: Build
    jobs:
      - job: BuildAndPackage
        displayName: Build and package
        steps:
          - task: TfxInstaller@4
            displayName: Install TFX CLI
            inputs:
              version: 'v0.15.0'

          - task: NodeTool@0
            displayName: Install Node.js
            inputs:
              versionSpec: '16.15.0'

          - task: Bash@3
            displayName: Compile the Synthetics task
            inputs:
              targetType: 'inline'
              script: |
                cd SyntheticsRunTestsTask
                yarn install --immutable
                yarn build
                yarn workspaces focus --production
                rm -rf .yarn/

          - task: PackageAzureDevOpsExtension@4
            displayName: Package Datadog CI extension
            name: 'packageStep'
            inputs:
              rootFolder: '$(Build.SourcesDirectory)'
              outputPath: '$(Build.ArtifactStagingDirectory)/$(packagedTask)'
              updateTasksVersion: false
              extensionVisibility: 'private'
              extensionPricing: 'free'

          - publish: '$(packageStep.Extension.OutputPath)'
            displayName: Publish VSIX artifact
            artifact: $(artifactPath)

  # Release a DEV extension. E2E tests will automatically run on it in `e2e-pipeline.yml`
  - ${{ if not(startsWith(variables['Build.SourceBranch'], 'refs/tags/')) }}:
      - stage: ReleaseDev
        displayName: Release DEV extension
        dependsOn: Build
        jobs:
          - job: PublishDev
            displayName: Publish (DEV)
            steps:
              - download: current
                displayName: Download VSIX artifact
                artifact: $(artifactPath)

              - task: TfxInstaller@4
                displayName: Install TFX CLI
                inputs:
                  version: 'v0.15.0'

              - task: QueryAzureDevOpsExtensionVersion@4
                displayName: Query existing DEV extension version
                name: 'queryDevVersion'
                inputs:
                  connectTo: 'VsTeam'
                  connectedServiceName: 'marketplace-service-connection'
                  publisherId: '$(publisherId)'
                  extensionId: '$(extensionId)'
                  extensionTag: '$(devExtensionTag)'
                  versionAction: 'Patch'

              - task: PublishAzureDevOpsExtension@4
                displayName: Publish new DEV extension version
                inputs:
                  connectTo: 'VsTeam'
                  connectedServiceName: 'marketplace-service-connection'
                  fileType: 'vsix'
                  vsixFile: '$(Pipeline.Workspace)/$(artifactPath)/$(packagedTask)'
                  extensionTag: '$(devExtensionTag)'
                  extensionName: '$(extensionName) DEV'
                  extensionVisibility: 'private'
                  extensionPricing: 'free'
                  shareWith: 'datadog-ci'
                  extensionVersion: '$(queryDevVersion.Extension.Version)'
                  updateTasksId: true # The DEV task ID is overridden to `99cf84cd-0117-58b7-b1dd-d95e5ae9baf8` (based on the `extensionTag`)
                  updateTasksVersion: true # Do not require updating the task version during development
                  updateTasksVersionType: patch

              # We need to wait in this job (i.e. inside the main pipeline) to make sure the extension is available before the E2E pipeline's jobs are enqueued.
              - task: Bash@3
                displayName: Wait for DEV extension availability
                inputs:
                  filePath: 'ci/poll-dev-extension-availability.sh'
                  arguments: |
                    -s "$(SERVICE_URL)" \
                    -t "$(SERVICE_TOKEN)" \
                    -i "$(publisherId).$(extensionId)$(devExtensionTag).$(contributionId)" \
                    -v "$(queryDevVersion.Extension.Version)"

  # Extension public release, only performed on release tags
  - ${{ if startsWith(variables['Build.SourceBranch'], 'refs/tags/v') }}:
      - stage: ReleasePublic
        displayName: Release public extension
        dependsOn: Build
        variables:
          extensionVersion: $[replace(variables['Build.SourceBranch'], 'refs/tags/v', '')]

        jobs:
          - job: PublishPublic
            displayName: Publish (public)
            steps:
              - download: current
                displayName: Download VSIX
                artifact: $(artifactPath)

              - task: TfxInstaller@4
                displayName: Install TFX CLI
                inputs:
                  version: 'v0.15.0'

              - task: PublishAzureDevOpsExtension@4
                displayName: Publish Extension
                inputs:
                  connectTo: 'VsTeam'
                  connectedServiceName: 'marketplace-service-connection'
                  fileType: 'vsix'
                  vsixFile: '$(Pipeline.Workspace)/$(artifactPath)/$(packagedTask)'
                  extensionVisibility: 'public'
                  extensionPricing: 'free'
                  extensionVersion: $(extensionVersion)
                  updateTasksId: false # The task ID stays `60b18503-c6d6-4e4b-a6b2-52fc6fb3d525` (defined in task.json)
                  updateTasksVersion: false # Bumped automatically by our Release Automation bot
