# Defines the `$(Build.BuildNumber)` variable.
# Update this if you need to do a new major/minor version of the EXTENSION.
# In general, there should not be any reason to do this.
# If you do it anyway but also did a change to the TASK, you WILL NEED to bump the task version.
# Tasks and extensions are independent.
name: '0.1$(rev:.r)'

# Disable the pipeline for individual commits.
# The pipeline requires a Pull Request to run.
trigger: none

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: ci-variables

stages:
  - stage: Build
    jobs:
      - job: Build
        steps:
          - task: TfxInstaller@3
            displayName: Install TFX CLI
            inputs:
              version: 'v0.12.x'
          - task: NodeTool@0
            displayName: Install Node.js
            inputs:
              versionSpec: '10.21.0'
          - task: Bash@3
            displayName: Compile the task
            inputs:
              targetType: 'inline'
              script: |
                cd synthetics-run-tests-task
                yarn install
                yarn build
                yarn install --production
          - task: PackageAzureDevOpsExtension@3
            displayName: Package extension
            name: 'packageStep'
            inputs:
              rootFolder: '$(Build.SourcesDirectory)'
              outputPath: '$(Build.ArtifactStagingDirectory)/$(ExtensionID)-$(Build.BuildNumber).vsix'
              publisherId: '$(PublisherID)'
              extensionId: '$(ExtensionID)'
              extensionName: '$(ExtensionName)'
              extensionVersion: '$(Build.BuildNumber)'
              extensionVisibility: 'private'
              extensionPricing: 'free'
          - publish: '$(packageStep.Extension.OutputPath)'
            displayName: Publish VSIX
            artifact: $(ArtifactName)

  - stage: Test
    displayName: E2E tests
    dependsOn: 'Build'
    jobs:
      - job: PublishPrivate
        displayName: Publish (private)
        steps:
          - download: current
            artifact: $(ArtifactName)
          - task: TfxInstaller@3
            displayName: Install TFX CLI
            inputs:
              version: 'v0.12.x'
          - task: PublishAzureDevOpsExtension@3
            displayName: Publish
            inputs:
              connectTo: 'VsTeam'
              connectedServiceName: 'marketplace-service-connection'
              fileType: 'vsix'
              vsixFile: '$(Pipeline.Workspace)/$(ArtifactName)/$(ExtensionID)-$(Build.BuildNumber).vsix'
              publisherId: '$(PublisherID)'
              extensionId: '$(ExtensionID)'
              extensionTag: '-dev'
              extensionName: '$(ExtensionName) DEV'
              updateTasksVersion: false
              extensionVisibility: 'private'
              shareWith: 'synthetics-test-automation'
              extensionPricing: 'free'
      - job: E2E
        displayName: E2E cross-platform
        dependsOn: PublishPrivate
        strategy:
          matrix:
            Linux:
              imageName: 'ubuntu-latest'
            Mac:
              imageName: 'macOS-latest'
            Windows:
              imageName: 'windows-latest'
        pool:
          vmImage: $(imageName)
        steps:
          # Update the version here if you do a major release of the TASK.
          # This is the fully qualified task name, since the `-dev` suffix is added to the EXTENSION name.
          # Format: `PublisherId.ExtensionId.ContributionId.TaskName`
          - task: Datadog.synthetics-test-automation-azure-devops-temporary-dev.synthetics-test-automation-azure-devops.synthetics-test-automation-azure-devops-temporary@0
            inputs:
              authenticationType: 'connectedService'
              connectedService: 'datadog-us1'
              configPath: './e2e/global.config.json'
              publicIds: |
                2r9-q7u-4nn
                pwd-mwg-3p5

  - stage: Release
    displayName: Release
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
    dependsOn: 'Test'
    jobs:
      - job: PublishPublic
        displayName: Publish (public)
        steps:
          - download: current
            artifact: $(ArtifactName)
          - task: TfxInstaller@3
            displayName: Install TFX CLI
            inputs:
              version: 'v0.12.x'
          - task: PublishAzureDevOpsExtension@3
            displayName: Publish
            inputs:
              connectTo: 'VsTeam'
              connectedServiceName: 'marketplace-service-connection'
              fileType: 'vsix'
              vsixFile: '$(Pipeline.Workspace)/$(ArtifactName)/$(ExtensionID)-$(Build.BuildNumber).vsix'
              publisherId: '$(PublisherID)'
              extensionId: '$(ExtensionID)'
              extensionName: '$(ExtensionName)'
              updateTasksVersion: false
              extensionVisibility: 'private' # TODO: to change to public
              extensionPricing: 'free'
