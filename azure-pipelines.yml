trigger:
  - main

# Do not trigger on Pull Requests.
pr: none

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: ci-variables

stages:
  - stage: Package_extension_and_publish_build_artifacts
    jobs:
      - job:
        steps:
          - task: TfxInstaller@3
            inputs:
              version: 'v0.12.x'
          - task: NodeTool@0
            displayName: Install Node.js
            inputs:
              versionSpec: '10.21.0'
          - task: Bash@3
            displayName: Compile the task
            inputs:
              targetType: 'inline'
              script: |
                cd synthetics-run-tests-task
                yarn install
                yarn build

          # Always patch the extension (`vss-extension.json` will never show the current published extension version),
          # but use the committed version in `task.json` for the task.
          - task: QueryAzureDevOpsExtensionVersion@3
            inputs:
              connectTo: 'VsTeam'
              connectedServiceName: 'marketplace-service-connection'
              publisherId: '$(PublisherID)'
              extensionId: '$(ExtensionID)'
              versionAction: 'Patch'
          - task: PackageAzureDevOpsExtension@3
            inputs:
              rootFolder: '$(System.DefaultWorkingDirectory)'
              publisherId: '$(PublisherID)'
              extensionId: '$(ExtensionID)'
              extensionName: '$(ExtensionName)'
              extensionVersion: '$(QueryAzureDevOpsExtensionVersion.Extension.Version)'
              extensionVisibility: 'private'
              extensionPricing: 'free'

          - task: CopyFiles@2
            displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
            inputs:
              Contents: '**/*.vsix'
              TargetFolder: '$(Build.ArtifactStagingDirectory)'
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: '$(ArtifactName)'
              publishLocation: 'Container'

  - stage: Download_build_artifacts_and_publish_the_extension
    jobs:
      - job:
        steps:
          - task: TfxInstaller@3
            inputs:
              version: 'v0.12.x'
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: '$(ArtifactName)'
              downloadPath: '$(System.DefaultWorkingDirectory)'
          - task: PublishAzureDevOpsExtension@3
            inputs:
              connectTo: 'VsTeam'
              connectedServiceName: 'marketplace-service-connection'
              fileType: 'vsix'
              vsixFile: '$(ArtifactName)/$(PublisherID).$(ExtensionID)-*.vsix'
              publisherId: '$(PublisherID)'
              extensionId: '$(ExtensionID)'
              extensionName: '$(ExtensionName)'
              updateTasksVersion: false
              extensionVisibility: 'private'
              extensionPricing: 'free'
